-- Databricks notebook source
CREATE WIDGET TEXT logicalenv DEFAULT "prd001";

-- COMMAND ----------

-- Get all NMIs
WITH EUITRANS_V1
AS (
	SELECT hub.NMI,
		salnk.HUB_NMI_HSH_KEY1,
		salnk.HUB_NMI_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY sat.SALNK_NMI_HSH_KEY,
				sat.DATEFROM ORDER BY sat.DATEFROM DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_CIS_EUITRANS sat
		WHERE length(trim(sat.NMI_CHECKSUM)) > 0
		) EUITRANS
	JOIN im${logicalenv}_rawvault.SALNK_NMI salnk ON EUITRANS.SALNK_NMI_HSH_KEY = salnk.SALNK_NMI_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_NMI hub ON salnk.HUB_NMI_HSH_KEY1 = hub.HUB_NMI_HSH_KEY
	WHERE EUITRANS.rec_seq = 1
		AND EUITRANS.CHANGE_TYPE <> 'D'
	),
	-- Get NMI Status
ZIIDTT_NMI_STAT_V2
AS (
	SELECT ZIIDTT_NMI_STAT.*
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY HUB_NMI_HSH_KEY ORDER BY sat.FROM_DT DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.SAT_NMI_CIS_ZIIDTT_NMI_STAT sat
		WHERE length(trim(NMI_CHECKSUM)) > 0
		) ZIIDTT_NMI_STAT
	WHERE ZIIDTT_NMI_STAT.rec_seq = 1
		AND TRIM(ZIIDTT_NMI_STAT.NMI_STATUS) IN ('A', 'D')
		AND ZIIDTT_NMI_STAT.TO_DT = '99991231'
		AND ZIIDTT_NMI_STAT.CHANGE_TYPE <> 'D'
	),
	-- Get Market Role Key
ESERVICE_V3
AS (
	SELECT hub.SRVID AS SERVICE_ID,
		lnk.HUB_NMI_HSH_KEY
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_NMI_PARTICIPANT_HSH_KEY,
				VERTRAG ORDER BY sat.EXTRACT_DATE_TIME DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_PARTICIPANT_CIS_ESERVICE sat
		) ESERVICE
	JOIN im${logicalenv}_rawvault.LNK_NMI_PARTICIPANT lnk ON ESERVICE.LNK_NMI_PARTICIPANT_HSH_KEY = lnk.LNK_NMI_PARTICIPANT_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_PARTICIPANT hub ON lnk.HUB_PARTICIPANT_HSH_KEY = hub.HUB_PARTICIPANT_HSH_KEY
	WHERE ESERVICE.rec_seq = 1
		AND ESERVICE.SERVICE = 'LNSP'
		AND hub.SRVID LIKE 'EASTERN%'
		AND ESERVICE.SERVICE_END = '99991231'
		AND ESERVICE.CHANGE_TYPE <> 'D'
	),
EUIINSTLN_V4
AS (
	SELECT salnk.HUB_NMI_HSH_KEY1,
		salnk.HUB_NMI_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY SALNK_NMI_HSH_KEY ORDER BY sat.DATEFROM DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_CIS_EUIINSTLN sat
		) EUIINSTLN
	JOIN im${logicalenv}_rawvault.SALNK_NMI salnk ON EUIINSTLN.SALNK_NMI_HSH_KEY = salnk.SALNK_NMI_HSH_KEY
		AND EUIINSTLN.rec_seq = 1
		AND EUIINSTLN.CHANGE_TYPE <> 'D'
	),
	-- Get NMI-Meter Installation Details
EASTL_V5
AS (
	SELECT lnk.HUB_NMI_HSH_KEY,
		lnk.HUB_EQUIPMENT_HSH_KEY,
		eastl.AB AS NMI_METER_START,
		eastl.BIS AS NMI_METER_END
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY sat.LNK_NMI_EQUIPMENT_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_EQUIPMENT_CIS_EASTL sat
		) eastl
	JOIN im${logicalenv}_rawvault.LNK_NMI_EQUIPMENT lnk ON eastl.LNK_NMI_EQUIPMENT_HSH_KEY = LNK.LNK_NMI_EQUIPMENT_HSH_KEY
		AND eastl.rec_seq = 1
		AND eastl.CHANGE_TYPE <> 'D'
	),
	--Get 5,6 Meter data
EGERH_V6
AS (
	SELECT salnk.HUB_EQUIPMENT_HSH_KEY1,
		salnk.HUB_EQUIPMENT_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_NMI_EQUIPMENT2_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_EQUIPMENT2_CIS_EGERH sat
		WHERE sat.KOMBINAT = 'Z'
		) egerh
	JOIN im${logicalenv}_rawvault.LNK_NMI_EQUIPMENT2 salnk ON egerh.LNK_NMI_EQUIPMENT2_HSH_KEY = salnk.LNK_NMI_EQUIPMENT2_HSH_KEY
		AND egerh.rec_seq = 1
		AND egerh.CHANGE_TYPE <> 'D'
	),
	-- Fetch Type-1-4 Meter Data
EGERR_V7
AS (
	SELECT salnk.HUB_EQUIPMENT_HSH_KEY1,
		salnk.HUB_EQUIPMENT_HSH_KEY2,
		hub_dev.DEVICE_ID
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_DEVICE_EQUIPMENT2_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_DEVICE_EQUIPMENT2_CIS_EGERR sat
		WHERE sat.KOMBINAT = 'Z'
		) egerr
	JOIN im${logicalenv}_rawvault.LNK_DEVICE_EQUIPMENT2 salnk ON egerr.LNK_DEVICE_EQUIPMENT2_HSH_KEY = salnk.LNK_DEVICE_EQUIPMENT2_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_DEVICE hub_dev ON hub_dev.HUB_DEVICE_HSH_KEY = salnk.HUB_DEVICE_HSH_KEY
	WHERE egerr.rec_seq = 1
		AND egerr.CHANGE_TYPE <> 'D'
	),
EQUI_V8
AS (
	SELECT lnk.HUB_EQUIPMENT_HSH_KEY,
		hubdev.DEVICE_ID AS SERNR
	FROM (
		SELECT lsat.*,
			ROW_NUMBER() OVER (
				PARTITION BY lsat.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY ORDER BY lsat.extract_date_time DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_EQUIPMENT_DEVICE_MATERIAL_CIS_EQUI lsat
		) equi
	JOIN im${logicalenv}_rawvault.LNK_EQUIPMENT_DEVICE_MATERIAL lnk ON equi.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY = lnk.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_DEVICE hubdev ON lnk.HUB_DEVICE_HSH_KEY = hubdev.HUB_DEVICE_HSH_KEY
	WHERE equi.rec_seq = 1
		AND equi.CHANGE_TYPE <> 'D'
	),
METER_DATA_VIEW
AS (
	----- another Min and max added to get one row for (NMI's & Meter) that moved from Type 5-6 to Type 1-4
	SELECT HUB_NMI_HSH_KEY,
		METER_NUM,
		min(NMI_METER_START) AS NMI_METER_START,
		max(NMI_METER_END) AS NMI_METER_END
	FROM (
		SELECT
			----- Min and max added to get one row for (NMI(ANLAGE)'s & Meter) that has multiple time slices
			EASTL_V5.HUB_NMI_HSH_KEY,
			EGERR_V7.DEVICE_ID AS METER_NUM,
			min(EASTL_V5.NMI_METER_START) AS NMI_METER_START,
			max(EASTL_V5.NMI_METER_END) AS NMI_METER_END
		FROM EASTL_V5
		JOIN EGERR_V7 ON EASTL_V5.HUB_EQUIPMENT_HSH_KEY = EGERR_V7.HUB_EQUIPMENT_HSH_KEY2
		GROUP BY EASTL_V5.HUB_NMI_HSH_KEY,
			EGERR_V7.DEVICE_ID
		
		UNION
		
		SELECT EASTL_V5.HUB_NMI_HSH_KEY,
			EQUI_V8.SERNR AS METER_NUM,
			min(EASTL_V5.NMI_METER_START) AS NMI_METER_START,
			max(EASTL_V5.NMI_METER_END) AS NMI_METER_END
		FROM EASTL_V5
		JOIN EGERH_V6 ON EASTL_V5.HUB_EQUIPMENT_HSH_KEY = EGERH_V6.HUB_EQUIPMENT_HSH_KEY2
		JOIN EQUI_V8 ON EGERH_V6.HUB_EQUIPMENT_HSH_KEY1 = EQUI_V8.HUB_EQUIPMENT_HSH_KEY
		GROUP BY EASTL_V5.HUB_NMI_HSH_KEY,
			EQUI_V8.SERNR
		)
	GROUP BY HUB_NMI_HSH_KEY,
		METER_NUM
	),
der as (    
SELECT DISTINCT EUITRANS_V1.NMI,
	ZIIDTT_NMI_STAT_V2.NMI_STATUS,
	NVL(TRIM(METER_DATA_VIEW.METER_NUM), 0) AS METER_NUM,
	NVL(METER_DATA_VIEW.NMI_METER_START, '99991231') AS NMI_METER_START,
	METER_DATA_VIEW.NMI_METER_END,
	ESERVICE_V3.SERVICE_ID AS MARKET_ROLE_KEY,
	date_format(from_utc_timestamp(current_timestamp(),'GMT+10'),'yyyy-MM-dd HH:mm:ss') as ROW_INSERT_DTM
FROM EUITRANS_V1
LEFT OUTER JOIN ZIIDTT_NMI_STAT_V2 ON EUITRANS_V1.HUB_NMI_HSH_KEY1 = ZIIDTT_NMI_STAT_V2.HUB_NMI_HSH_KEY
LEFT OUTER JOIN ESERVICE_V3 ON EUITRANS_V1.HUB_NMI_HSH_KEY2 = ESERVICE_V3.HUB_NMI_HSH_KEY
LEFT OUTER JOIN EUIINSTLN_V4 ON EUITRANS_V1.HUB_NMI_HSH_KEY2 = EUIINSTLN_V4.HUB_NMI_HSH_KEY2
LEFT JOIN METER_DATA_VIEW ON EUIINSTLN_V4.HUB_NMI_HSH_KEY1 = METER_DATA_VIEW.HUB_NMI_HSH_KEY
)
select count(*) from der

-- COMMAND ----------

-- Get all NMIs
WITH EUITRANS_V1
AS (
	SELECT hub.NMI,
		salnk.HUB_NMI_HSH_KEY1,
		salnk.HUB_NMI_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY sat.SALNK_NMI_HSH_KEY,
				sat.DATEFROM ORDER BY sat.DATEFROM DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_CIS_EUITRANS sat
		WHERE length(trim(sat.NMI_CHECKSUM)) > 0
		) EUITRANS
	JOIN im${logicalenv}_rawvault.SALNK_NMI salnk ON EUITRANS.SALNK_NMI_HSH_KEY = salnk.SALNK_NMI_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_NMI hub ON salnk.HUB_NMI_HSH_KEY1 = hub.HUB_NMI_HSH_KEY
	WHERE EUITRANS.rec_seq = 1
		AND EUITRANS.CHANGE_TYPE <> 'D'
	),
	-- Get NMI Status
ZIIDTT_NMI_STAT_V2
AS (
	SELECT ZIIDTT_NMI_STAT.*
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY HUB_NMI_HSH_KEY ORDER BY sat.FROM_DT DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.SAT_NMI_CIS_ZIIDTT_NMI_STAT sat
		WHERE length(trim(NMI_CHECKSUM)) > 0
		) ZIIDTT_NMI_STAT
	WHERE ZIIDTT_NMI_STAT.rec_seq = 1
		AND TRIM(ZIIDTT_NMI_STAT.NMI_STATUS) IN ('A', 'D')
		AND ZIIDTT_NMI_STAT.TO_DT = '99991231'
		AND ZIIDTT_NMI_STAT.CHANGE_TYPE <> 'D'
	),
	-- Get Market Role Key
ESERVICE_V3
AS (
	SELECT hub.SRVID AS SERVICE_ID,
		lnk.HUB_NMI_HSH_KEY
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_NMI_PARTICIPANT_HSH_KEY,
				VERTRAG ORDER BY sat.EXTRACT_DATE_TIME DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_PARTICIPANT_CIS_ESERVICE sat
		) ESERVICE
	JOIN im${logicalenv}_rawvault.LNK_NMI_PARTICIPANT lnk ON ESERVICE.LNK_NMI_PARTICIPANT_HSH_KEY = lnk.LNK_NMI_PARTICIPANT_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_PARTICIPANT hub ON lnk.HUB_PARTICIPANT_HSH_KEY = hub.HUB_PARTICIPANT_HSH_KEY
	WHERE ESERVICE.rec_seq = 1
		AND ESERVICE.SERVICE = 'LNSP'
		AND hub.SRVID LIKE 'EASTERN%'
		AND ESERVICE.SERVICE_END = '99991231'
		AND ESERVICE.CHANGE_TYPE <> 'D'
	),
EUIINSTLN_V4
AS (
	SELECT salnk.HUB_NMI_HSH_KEY1,
		salnk.HUB_NMI_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY SALNK_NMI_HSH_KEY ORDER BY sat.DATEFROM DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_CIS_EUIINSTLN sat
		) EUIINSTLN
	JOIN im${logicalenv}_rawvault.SALNK_NMI salnk ON EUIINSTLN.SALNK_NMI_HSH_KEY = salnk.SALNK_NMI_HSH_KEY
		AND EUIINSTLN.rec_seq = 1
		AND EUIINSTLN.CHANGE_TYPE <> 'D'
	),
	-- Get NMI-Meter Installation Details
EASTL_V5
AS (
	SELECT lnk.HUB_NMI_HSH_KEY,
		lnk.HUB_EQUIPMENT_HSH_KEY,
		eastl.AB AS NMI_METER_START,
		eastl.BIS AS NMI_METER_END
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY sat.LNK_NMI_EQUIPMENT_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_EQUIPMENT_CIS_EASTL sat
		) eastl
	JOIN im${logicalenv}_rawvault.LNK_NMI_EQUIPMENT lnk ON eastl.LNK_NMI_EQUIPMENT_HSH_KEY = LNK.LNK_NMI_EQUIPMENT_HSH_KEY
		AND eastl.rec_seq = 1
		AND eastl.CHANGE_TYPE <> 'D'
	),
	--Get 5,6 Meter data
EGERH_V6
AS (
	SELECT salnk.HUB_EQUIPMENT_HSH_KEY1,
		salnk.HUB_EQUIPMENT_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_NMI_EQUIPMENT2_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_EQUIPMENT2_CIS_EGERH sat
		) egerh
	JOIN im${logicalenv}_rawvault.LNK_NMI_EQUIPMENT2 salnk ON egerh.LNK_NMI_EQUIPMENT2_HSH_KEY = salnk.LNK_NMI_EQUIPMENT2_HSH_KEY
		AND egerh.rec_seq = 1
		AND egerh.CHANGE_TYPE <> 'D'
        AND egerh.KOMBINAT = 'Z'
	),
	-- Fetch Type-1-4 Meter Data
EGERR_V7
AS (
	SELECT salnk.HUB_EQUIPMENT_HSH_KEY1,
		salnk.HUB_EQUIPMENT_HSH_KEY2,
		hub_dev.DEVICE_ID
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_DEVICE_EQUIPMENT2_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_DEVICE_EQUIPMENT2_CIS_EGERR sat
		) egerr
	JOIN im${logicalenv}_rawvault.LNK_DEVICE_EQUIPMENT2 salnk ON egerr.LNK_DEVICE_EQUIPMENT2_HSH_KEY = salnk.LNK_DEVICE_EQUIPMENT2_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_DEVICE hub_dev ON hub_dev.HUB_DEVICE_HSH_KEY = salnk.HUB_DEVICE_HSH_KEY
	WHERE egerr.rec_seq = 1
		AND egerr.CHANGE_TYPE <> 'D'
        AND egerr.KOMBINAT = 'Z'
	),
EQUI_V8
AS (
	SELECT lnk.HUB_EQUIPMENT_HSH_KEY,
		hubdev.DEVICE_ID AS SERNR
	FROM (
		SELECT lsat.*,
			ROW_NUMBER() OVER (
				PARTITION BY lsat.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY ORDER BY lsat.extract_date_time DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_EQUIPMENT_DEVICE_MATERIAL_CIS_EQUI lsat
		) equi
	JOIN im${logicalenv}_rawvault.LNK_EQUIPMENT_DEVICE_MATERIAL lnk ON equi.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY = lnk.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_DEVICE hubdev ON lnk.HUB_DEVICE_HSH_KEY = hubdev.HUB_DEVICE_HSH_KEY
	WHERE equi.rec_seq = 1
		AND equi.CHANGE_TYPE <> 'D'
	),
METER_DATA_VIEW
AS (
	----- another Min and max added to get one row for (NMI's & Meter) that moved from Type 5-6 to Type 1-4
	SELECT HUB_NMI_HSH_KEY,
		METER_NUM,
		min(NMI_METER_START) AS NMI_METER_START,
		max(NMI_METER_END) AS NMI_METER_END
	FROM (
		SELECT
			----- Min and max added to get one row for (NMI(ANLAGE)'s & Meter) that has multiple time slices
			EASTL_V5.HUB_NMI_HSH_KEY,
			EGERR_V7.DEVICE_ID AS METER_NUM,
			min(EASTL_V5.NMI_METER_START) AS NMI_METER_START,
			max(EASTL_V5.NMI_METER_END) AS NMI_METER_END
		FROM EASTL_V5
		JOIN EGERR_V7 ON EASTL_V5.HUB_EQUIPMENT_HSH_KEY = EGERR_V7.HUB_EQUIPMENT_HSH_KEY2
		GROUP BY EASTL_V5.HUB_NMI_HSH_KEY,
			EGERR_V7.DEVICE_ID
		
		UNION
		
		SELECT EASTL_V5.HUB_NMI_HSH_KEY,
			EQUI_V8.SERNR AS METER_NUM,
			min(EASTL_V5.NMI_METER_START) AS NMI_METER_START,
			max(EASTL_V5.NMI_METER_END) AS NMI_METER_END
		FROM EASTL_V5
		JOIN EGERH_V6 ON EASTL_V5.HUB_EQUIPMENT_HSH_KEY = EGERH_V6.HUB_EQUIPMENT_HSH_KEY2
		JOIN EQUI_V8 ON EGERH_V6.HUB_EQUIPMENT_HSH_KEY1 = EQUI_V8.HUB_EQUIPMENT_HSH_KEY
		GROUP BY EASTL_V5.HUB_NMI_HSH_KEY,
			EQUI_V8.SERNR
		)
	GROUP BY HUB_NMI_HSH_KEY,
		METER_NUM
	),
der as (    
SELECT DISTINCT EUITRANS_V1.NMI,
	ZIIDTT_NMI_STAT_V2.NMI_STATUS,
	NVL(TRIM(METER_DATA_VIEW.METER_NUM), 0) AS METER_NUM,
	NVL(METER_DATA_VIEW.NMI_METER_START, '99991231') AS NMI_METER_START,
	METER_DATA_VIEW.NMI_METER_END,
	ESERVICE_V3.SERVICE_ID AS MARKET_ROLE_KEY,
	date_format(from_utc_timestamp(current_timestamp(),'GMT+10'),'yyyy-MM-dd HH:mm:ss') as ROW_INSERT_DTM
FROM EUITRANS_V1
LEFT OUTER JOIN ZIIDTT_NMI_STAT_V2 ON EUITRANS_V1.HUB_NMI_HSH_KEY1 = ZIIDTT_NMI_STAT_V2.HUB_NMI_HSH_KEY
LEFT OUTER JOIN ESERVICE_V3 ON EUITRANS_V1.HUB_NMI_HSH_KEY2 = ESERVICE_V3.HUB_NMI_HSH_KEY
LEFT OUTER JOIN EUIINSTLN_V4 ON EUITRANS_V1.HUB_NMI_HSH_KEY2 = EUIINSTLN_V4.HUB_NMI_HSH_KEY2
LEFT JOIN METER_DATA_VIEW ON EUIINSTLN_V4.HUB_NMI_HSH_KEY1 = METER_DATA_VIEW.HUB_NMI_HSH_KEY
)
select count(*) from der

-- COMMAND ----------

-- Get all NMIs
WITH EUITRANS_V1
AS (
	SELECT hub.NMI,
		salnk.HUB_NMI_HSH_KEY1,
		salnk.HUB_NMI_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY sat.SALNK_NMI_HSH_KEY,
				sat.DATEFROM ORDER BY sat.DATEFROM DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_CIS_EUITRANS sat
		WHERE length(trim(sat.NMI_CHECKSUM)) > 0
		) EUITRANS
	JOIN im${logicalenv}_rawvault.SALNK_NMI salnk ON EUITRANS.SALNK_NMI_HSH_KEY = salnk.SALNK_NMI_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_NMI hub ON salnk.HUB_NMI_HSH_KEY1 = hub.HUB_NMI_HSH_KEY
	WHERE EUITRANS.rec_seq = 1
		AND EUITRANS.CHANGE_TYPE <> 'D'
	),
	-- Get NMI Status
ZIIDTT_NMI_STAT_V2
AS (
	SELECT ZIIDTT_NMI_STAT.*
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY HUB_NMI_HSH_KEY ORDER BY sat.FROM_DT DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.SAT_NMI_CIS_ZIIDTT_NMI_STAT sat
		WHERE length(trim(NMI_CHECKSUM)) > 0
		) ZIIDTT_NMI_STAT
	WHERE ZIIDTT_NMI_STAT.rec_seq = 1
		AND TRIM(ZIIDTT_NMI_STAT.NMI_STATUS) IN ('A', 'D')
		AND ZIIDTT_NMI_STAT.TO_DT = '99991231'
		AND ZIIDTT_NMI_STAT.CHANGE_TYPE <> 'D'
	),
	-- Get Market Role Key
ESERVICE_V3
AS (
	SELECT hub.SRVID AS SERVICE_ID,
		lnk.HUB_NMI_HSH_KEY
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_NMI_PARTICIPANT_HSH_KEY,
				VERTRAG ORDER BY sat.EXTRACT_DATE_TIME DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_PARTICIPANT_CIS_ESERVICE sat
		) ESERVICE
	JOIN im${logicalenv}_rawvault.LNK_NMI_PARTICIPANT lnk ON ESERVICE.LNK_NMI_PARTICIPANT_HSH_KEY = lnk.LNK_NMI_PARTICIPANT_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_PARTICIPANT hub ON lnk.HUB_PARTICIPANT_HSH_KEY = hub.HUB_PARTICIPANT_HSH_KEY
	WHERE ESERVICE.rec_seq = 1
		AND ESERVICE.SERVICE = 'LNSP'
		AND hub.SRVID LIKE 'EASTERN%'
		AND ESERVICE.SERVICE_END = '99991231'
		AND ESERVICE.CHANGE_TYPE <> 'D'
	),
EUIINSTLN_V4
AS (
	SELECT salnk.HUB_NMI_HSH_KEY1,
		salnk.HUB_NMI_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY SALNK_NMI_HSH_KEY ORDER BY sat.DATEFROM DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_CIS_EUIINSTLN sat
		) EUIINSTLN
	JOIN im${logicalenv}_rawvault.SALNK_NMI salnk ON EUIINSTLN.SALNK_NMI_HSH_KEY = salnk.SALNK_NMI_HSH_KEY
		AND EUIINSTLN.rec_seq = 1
		AND EUIINSTLN.CHANGE_TYPE <> 'D'
	),
	-- Get NMI-Meter Installation Details
EASTL_V5
AS (
	SELECT lnk.HUB_NMI_HSH_KEY,
		lnk.HUB_EQUIPMENT_HSH_KEY,
		eastl.AB AS NMI_METER_START,
		eastl.BIS AS NMI_METER_END
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY sat.LNK_NMI_EQUIPMENT_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_EQUIPMENT_CIS_EASTL sat
		) eastl
	JOIN im${logicalenv}_rawvault.LNK_NMI_EQUIPMENT lnk ON eastl.LNK_NMI_EQUIPMENT_HSH_KEY = LNK.LNK_NMI_EQUIPMENT_HSH_KEY
		AND eastl.rec_seq = 1
		AND eastl.CHANGE_TYPE <> 'D'
	),
	--Get 5,6 Meter data
EGERH_V6
AS (
	SELECT salnk.HUB_EQUIPMENT_HSH_KEY1,
		salnk.HUB_EQUIPMENT_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_NMI_EQUIPMENT2_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_EQUIPMENT2_CIS_EGERH sat
		WHERE sat.KOMBINAT = 'Z'
		) egerh
	JOIN im${logicalenv}_rawvault.LNK_NMI_EQUIPMENT2 salnk ON egerh.LNK_NMI_EQUIPMENT2_HSH_KEY = salnk.LNK_NMI_EQUIPMENT2_HSH_KEY
		AND egerh.rec_seq = 1
		AND egerh.CHANGE_TYPE <> 'D'
	),
	-- Fetch Type-1-4 Meter Data
EGERR_V7
AS (
	SELECT salnk.HUB_EQUIPMENT_HSH_KEY1,
		salnk.HUB_EQUIPMENT_HSH_KEY2,
		hub_dev.DEVICE_ID
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_DEVICE_EQUIPMENT2_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_DEVICE_EQUIPMENT2_CIS_EGERR sat
		WHERE sat.KOMBINAT = 'Z'
		) egerr
	JOIN im${logicalenv}_rawvault.LNK_DEVICE_EQUIPMENT2 salnk ON egerr.LNK_DEVICE_EQUIPMENT2_HSH_KEY = salnk.LNK_DEVICE_EQUIPMENT2_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_DEVICE hub_dev ON hub_dev.HUB_DEVICE_HSH_KEY = salnk.HUB_DEVICE_HSH_KEY
	WHERE egerr.rec_seq = 1
		AND egerr.CHANGE_TYPE <> 'D'
	),
EQUI_V8
AS (
	SELECT lnk.HUB_EQUIPMENT_HSH_KEY,
		hubdev.DEVICE_ID AS SERNR
	FROM (
		SELECT lsat.*,
			ROW_NUMBER() OVER (
				PARTITION BY lsat.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY ORDER BY lsat.extract_date_time DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_EQUIPMENT_DEVICE_MATERIAL_CIS_EQUI lsat
		) equi
	JOIN im${logicalenv}_rawvault.LNK_EQUIPMENT_DEVICE_MATERIAL lnk ON equi.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY = lnk.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_DEVICE hubdev ON lnk.HUB_DEVICE_HSH_KEY = hubdev.HUB_DEVICE_HSH_KEY
	WHERE equi.rec_seq = 1
		AND equi.CHANGE_TYPE <> 'D'
	),
METER_DATA_VIEW
AS (
	----- another Min and max added to get one row for (NMI's & Meter) that moved from Type 5-6 to Type 1-4
	SELECT HUB_NMI_HSH_KEY,
		METER_NUM,
		min(NMI_METER_START) AS NMI_METER_START,
		max(NMI_METER_END) AS NMI_METER_END
	FROM (
		SELECT
			----- Min and max added to get one row for (NMI(ANLAGE)'s & Meter) that has multiple time slices
			EASTL_V5.HUB_NMI_HSH_KEY,
			EGERR_V7.DEVICE_ID AS METER_NUM,
			min(EASTL_V5.NMI_METER_START) AS NMI_METER_START,
			max(EASTL_V5.NMI_METER_END) AS NMI_METER_END
		FROM EASTL_V5
		JOIN EGERR_V7 ON EASTL_V5.HUB_EQUIPMENT_HSH_KEY = EGERR_V7.HUB_EQUIPMENT_HSH_KEY2
		GROUP BY EASTL_V5.HUB_NMI_HSH_KEY,
			EGERR_V7.DEVICE_ID
		
		UNION
		
		SELECT EASTL_V5.HUB_NMI_HSH_KEY,
			EQUI_V8.SERNR AS METER_NUM,
			min(EASTL_V5.NMI_METER_START) AS NMI_METER_START,
			max(EASTL_V5.NMI_METER_END) AS NMI_METER_END
		FROM EASTL_V5
		JOIN EGERH_V6 ON EASTL_V5.HUB_EQUIPMENT_HSH_KEY = EGERH_V6.HUB_EQUIPMENT_HSH_KEY2
		JOIN EQUI_V8 ON EGERH_V6.HUB_EQUIPMENT_HSH_KEY1 = EQUI_V8.HUB_EQUIPMENT_HSH_KEY
		GROUP BY EASTL_V5.HUB_NMI_HSH_KEY,
			EQUI_V8.SERNR
		)
	GROUP BY HUB_NMI_HSH_KEY,
		METER_NUM
	),
der as (    
SELECT DISTINCT EUITRANS_V1.NMI,
	ZIIDTT_NMI_STAT_V2.NMI_STATUS,
	NVL(TRIM(METER_DATA_VIEW.METER_NUM), 0) AS METER_NUM,
	NVL(METER_DATA_VIEW.NMI_METER_START, '99991231') AS NMI_METER_START,
	METER_DATA_VIEW.NMI_METER_END,
	ESERVICE_V3.SERVICE_ID AS MARKET_ROLE_KEY,
	date_format(from_utc_timestamp(current_timestamp(),'GMT+10'),'yyyy-MM-dd HH:mm:ss') as ROW_INSERT_DTM
FROM EUITRANS_V1
LEFT OUTER JOIN ZIIDTT_NMI_STAT_V2 ON EUITRANS_V1.HUB_NMI_HSH_KEY1 = ZIIDTT_NMI_STAT_V2.HUB_NMI_HSH_KEY
LEFT OUTER JOIN ESERVICE_V3 ON EUITRANS_V1.HUB_NMI_HSH_KEY2 = ESERVICE_V3.HUB_NMI_HSH_KEY
LEFT OUTER JOIN EUIINSTLN_V4 ON EUITRANS_V1.HUB_NMI_HSH_KEY2 = EUIINSTLN_V4.HUB_NMI_HSH_KEY2
LEFT JOIN METER_DATA_VIEW ON EUIINSTLN_V4.HUB_NMI_HSH_KEY1 = METER_DATA_VIEW.HUB_NMI_HSH_KEY
)
select count(*) from der

-- COMMAND ----------

-- Get all NMIs
WITH EUITRANS_V1
AS (
	SELECT hub.NMI,
		salnk.HUB_NMI_HSH_KEY1,
		salnk.HUB_NMI_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY sat.SALNK_NMI_HSH_KEY,
				sat.DATEFROM ORDER BY sat.DATEFROM DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_CIS_EUITRANS sat
		WHERE length(trim(sat.NMI_CHECKSUM)) > 0
		) EUITRANS
	JOIN im${logicalenv}_rawvault.SALNK_NMI salnk ON EUITRANS.SALNK_NMI_HSH_KEY = salnk.SALNK_NMI_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_NMI hub ON salnk.HUB_NMI_HSH_KEY1 = hub.HUB_NMI_HSH_KEY
	WHERE EUITRANS.rec_seq = 1
		AND EUITRANS.CHANGE_TYPE <> 'D'
	),
	-- Get NMI Status
ZIIDTT_NMI_STAT_V2
AS (
	SELECT ZIIDTT_NMI_STAT.*
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY HUB_NMI_HSH_KEY ORDER BY sat.FROM_DT DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.SAT_NMI_CIS_ZIIDTT_NMI_STAT sat
		WHERE length(trim(NMI_CHECKSUM)) > 0
		) ZIIDTT_NMI_STAT
	WHERE ZIIDTT_NMI_STAT.rec_seq = 1
		AND TRIM(ZIIDTT_NMI_STAT.NMI_STATUS) IN ('A', 'D')
		AND ZIIDTT_NMI_STAT.TO_DT = '99991231'
		AND ZIIDTT_NMI_STAT.CHANGE_TYPE <> 'D'
	),
	-- Get Market Role Key
ESERVICE_V3
AS (
	SELECT hub.SRVID AS SERVICE_ID,
		lnk.HUB_NMI_HSH_KEY
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_NMI_PARTICIPANT_HSH_KEY,
				VERTRAG ORDER BY sat.EXTRACT_DATE_TIME DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_PARTICIPANT_CIS_ESERVICE sat
		) ESERVICE
	JOIN im${logicalenv}_rawvault.LNK_NMI_PARTICIPANT lnk ON ESERVICE.LNK_NMI_PARTICIPANT_HSH_KEY = lnk.LNK_NMI_PARTICIPANT_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_PARTICIPANT hub ON lnk.HUB_PARTICIPANT_HSH_KEY = hub.HUB_PARTICIPANT_HSH_KEY
	WHERE ESERVICE.rec_seq = 1
		AND ESERVICE.SERVICE = 'LNSP'
		AND hub.SRVID LIKE 'EASTERN%'
		AND ESERVICE.SERVICE_END = '99991231'
		AND ESERVICE.CHANGE_TYPE <> 'D'
	),
EUIINSTLN_V4
AS (
	SELECT salnk.HUB_NMI_HSH_KEY1,
		salnk.HUB_NMI_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY SALNK_NMI_HSH_KEY ORDER BY sat.DATEFROM DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_CIS_EUIINSTLN sat
		) EUIINSTLN
	JOIN im${logicalenv}_rawvault.SALNK_NMI salnk ON EUIINSTLN.SALNK_NMI_HSH_KEY = salnk.SALNK_NMI_HSH_KEY
		AND EUIINSTLN.rec_seq = 1
		AND EUIINSTLN.CHANGE_TYPE <> 'D'
	),
	-- Get NMI-Meter Installation Details
EASTL_V5
AS (
	SELECT lnk.HUB_NMI_HSH_KEY,
		lnk.HUB_EQUIPMENT_HSH_KEY,
		eastl.AB AS NMI_METER_START,
		eastl.BIS AS NMI_METER_END
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY sat.LNK_NMI_EQUIPMENT_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_EQUIPMENT_CIS_EASTL sat
		) eastl
	JOIN im${logicalenv}_rawvault.LNK_NMI_EQUIPMENT lnk ON eastl.LNK_NMI_EQUIPMENT_HSH_KEY = LNK.LNK_NMI_EQUIPMENT_HSH_KEY
		AND eastl.rec_seq = 1
		AND eastl.CHANGE_TYPE <> 'D'
	),
	--Get 5,6 Meter data
EGERH_V6
AS (
	SELECT salnk.HUB_EQUIPMENT_HSH_KEY1,
		salnk.HUB_EQUIPMENT_HSH_KEY2
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_NMI_EQUIPMENT2_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_NMI_EQUIPMENT2_CIS_EGERH sat
		) egerh
	JOIN im${logicalenv}_rawvault.LNK_NMI_EQUIPMENT2 salnk ON egerh.LNK_NMI_EQUIPMENT2_HSH_KEY = salnk.LNK_NMI_EQUIPMENT2_HSH_KEY
		AND egerh.rec_seq = 1
		AND egerh.CHANGE_TYPE <> 'D'
        AND egerh.KOMBINAT = 'Z'
	),
	-- Fetch Type-1-4 Meter Data
EGERR_V7
AS (
	SELECT salnk.HUB_EQUIPMENT_HSH_KEY1,
		salnk.HUB_EQUIPMENT_HSH_KEY2,
		hub_dev.DEVICE_ID
	FROM (
		SELECT sat.*,
			ROW_NUMBER() OVER (
				PARTITION BY LNK_DEVICE_EQUIPMENT2_HSH_KEY ORDER BY sat.AB DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_DEVICE_EQUIPMENT2_CIS_EGERR sat
		) egerr
	JOIN im${logicalenv}_rawvault.LNK_DEVICE_EQUIPMENT2 salnk ON egerr.LNK_DEVICE_EQUIPMENT2_HSH_KEY = salnk.LNK_DEVICE_EQUIPMENT2_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_DEVICE hub_dev ON hub_dev.HUB_DEVICE_HSH_KEY = salnk.HUB_DEVICE_HSH_KEY
	WHERE egerr.rec_seq = 1
		AND egerr.CHANGE_TYPE <> 'D'
        AND egerr.KOMBINAT = 'Z'
	),
EQUI_V8
AS (
	SELECT lnk.HUB_EQUIPMENT_HSH_KEY,
		hubdev.DEVICE_ID AS SERNR
	FROM (
		SELECT lsat.*,
			ROW_NUMBER() OVER (
				PARTITION BY lsat.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY ORDER BY lsat.extract_date_time DESC
				) AS `rec_seq`
		FROM im${logicalenv}_rawvault.LSAT_EQUIPMENT_DEVICE_MATERIAL_CIS_EQUI lsat
		) equi
	JOIN im${logicalenv}_rawvault.LNK_EQUIPMENT_DEVICE_MATERIAL lnk ON equi.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY = lnk.LNK_EQUIPMENT_DEVICE_MATERIAL_HSH_KEY
	JOIN im${logicalenv}_rawvault.HUB_DEVICE hubdev ON lnk.HUB_DEVICE_HSH_KEY = hubdev.HUB_DEVICE_HSH_KEY
	WHERE equi.rec_seq = 1
		AND equi.CHANGE_TYPE <> 'D'
	),
METER_DATA_VIEW
AS (
	----- another Min and max added to get one row for (NMI's & Meter) that moved from Type 5-6 to Type 1-4
	SELECT HUB_NMI_HSH_KEY,
		METER_NUM,
		min(NMI_METER_START) AS NMI_METER_START,
		max(NMI_METER_END) AS NMI_METER_END
	FROM (
		SELECT
			----- Min and max added to get one row for (NMI(ANLAGE)'s & Meter) that has multiple time slices
			EASTL_V5.HUB_NMI_HSH_KEY,
			EGERR_V7.DEVICE_ID AS METER_NUM,
			min(EASTL_V5.NMI_METER_START) AS NMI_METER_START,
			max(EASTL_V5.NMI_METER_END) AS NMI_METER_END
		FROM EASTL_V5
		JOIN EGERR_V7 ON EASTL_V5.HUB_EQUIPMENT_HSH_KEY = EGERR_V7.HUB_EQUIPMENT_HSH_KEY2
		GROUP BY EASTL_V5.HUB_NMI_HSH_KEY,
			EGERR_V7.DEVICE_ID
		
		UNION
		
		SELECT EASTL_V5.HUB_NMI_HSH_KEY,
			EQUI_V8.SERNR AS METER_NUM,
			min(EASTL_V5.NMI_METER_START) AS NMI_METER_START,
			max(EASTL_V5.NMI_METER_END) AS NMI_METER_END
		FROM EASTL_V5
		JOIN EGERH_V6 ON EASTL_V5.HUB_EQUIPMENT_HSH_KEY = EGERH_V6.HUB_EQUIPMENT_HSH_KEY2
		JOIN EQUI_V8 ON EGERH_V6.HUB_EQUIPMENT_HSH_KEY1 = EQUI_V8.HUB_EQUIPMENT_HSH_KEY
		GROUP BY EASTL_V5.HUB_NMI_HSH_KEY,
			EQUI_V8.SERNR
		)
	GROUP BY HUB_NMI_HSH_KEY,
		METER_NUM
	),
der as (    
SELECT DISTINCT EUITRANS_V1.NMI,
	ZIIDTT_NMI_STAT_V2.NMI_STATUS,
	NVL(TRIM(METER_DATA_VIEW.METER_NUM), 0) AS METER_NUM,
	NVL(METER_DATA_VIEW.NMI_METER_START, '99991231') AS NMI_METER_START,
	METER_DATA_VIEW.NMI_METER_END,
	ESERVICE_V3.SERVICE_ID AS MARKET_ROLE_KEY,
	date_format(from_utc_timestamp(current_timestamp(),'GMT+10'),'yyyy-MM-dd HH:mm:ss') as ROW_INSERT_DTM
FROM EUITRANS_V1
LEFT OUTER JOIN ZIIDTT_NMI_STAT_V2 ON EUITRANS_V1.HUB_NMI_HSH_KEY1 = ZIIDTT_NMI_STAT_V2.HUB_NMI_HSH_KEY
LEFT OUTER JOIN ESERVICE_V3 ON EUITRANS_V1.HUB_NMI_HSH_KEY2 = ESERVICE_V3.HUB_NMI_HSH_KEY
LEFT OUTER JOIN EUIINSTLN_V4 ON EUITRANS_V1.HUB_NMI_HSH_KEY2 = EUIINSTLN_V4.HUB_NMI_HSH_KEY2
LEFT JOIN METER_DATA_VIEW ON EUIINSTLN_V4.HUB_NMI_HSH_KEY1 = METER_DATA_VIEW.HUB_NMI_HSH_KEY
)
select count(*) from der
